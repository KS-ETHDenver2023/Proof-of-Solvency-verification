out =([(8699432045257161706358133832339575308164485902035309145134574541677952208786, 78535291378740721234578316120467407321810628584749678784384673940412658537704), (29056617860088341588474409273845422634728425343394641614498890079885054856757, 75032193913088500541039453670682419205155295495430486190958043013954800424802), (47232044085695769918823386829263410260540466775787368474340746882469217606003, 102476820674251588599706745458742861204323037559559229049636544000774750933760), (33783134989723358986151711319413202040280886278447963666743653018944676184231, 20628683440994929044335245088068656856558854378425920552921832486545719505761)], [94206254589666472359065831410929172532443717179848449862709692935326460344624, 107872014291264366631568795852538451125481614796037912471683328256452739618557, 61736391946946012912057037645593840117759691078015067282097082531408475663187, 12900214153700615892428413516904152926363096460598582404661061363615440363517], 114164932319645813794860768178012788919781870371923834885275253231433066948691)

b = []
for i in out[0]:
    b.append(i[0])
    b.append(i[1])

print(b)
print("---------------------------")

print(out[1])
print("---------------------------")

print(out[2])
print("---------------------------")

print("message = 12")

# create arg
print("---------------------------")

arg = str(b) + "," + str(out[1]) + "," + str(out[2]) + "," + str(12)
print(arg)

# check if all pointsd are on the secp256k1 curve
print("---------------------------")
def isOnSECP256K1Curve(x, y):
    p = "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
    p = int(p, 16)
    return (y*y - (x*x*x + 7)) % p == 0

for i in out[0]:
    print(isOnSECP256K1Curve(i[0], i[1]))